"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[983],{490:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>a,toc:()=>r});const a=JSON.parse('{"id":"installation/desktop","title":"Install the Desktop application","description":"You can install Komga from the Download page. Just follow the instructions on the page.","source":"@site/docs/installation/desktop.md","sourceDirName":"installation","slug":"/installation/desktop","permalink":"/docs/installation/desktop","draft":false,"unlisted":false,"editUrl":"https://github.com/gotson/komga-website/tree/master/docs/installation/desktop.md","tags":[],"version":"current","lastUpdatedAt":1737106386000,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Install from the Microsoft Store","permalink":"/docs/installation/ms-store"},"next":{"title":"Run with Docker","permalink":"/docs/installation/docker"}}');var i=n(2540),s=n(3023);const o={},l="Install the Desktop application",d={},r=[{value:"Updating",id:"updating",level:2},{value:"Windows",id:"windows",level:3},{value:"macOS",id:"macos",level:3},{value:"Linux",id:"linux",level:3},{value:"Read next",id:"read-next",level:2}];function c(e){const t={a:"a",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"install-the-desktop-application",children:"Install the Desktop application"})}),"\n",(0,i.jsxs)(t.p,{children:["You can install Komga from the ",(0,i.jsx)(t.a,{href:"https://download.komga.org",children:"Download page"}),". Just follow the instructions on the page."]}),"\n",(0,i.jsx)(t.p,{children:"The desktop application is available for Windows, macOS and Linux."}),"\n",(0,i.jsx)(t.h2,{id:"updating",children:"Updating"}),"\n",(0,i.jsx)(t.p,{children:"The application will automatically update itself when a new version is available."}),"\n",(0,i.jsx)(t.h3,{id:"windows",children:"Windows"}),"\n",(0,i.jsx)(t.p,{children:"The OS itself will check for updates every 8 hours and upgrade the app in the background, even if it's not being used. Users will never see an update prompt."}),"\n",(0,i.jsx)(t.h3,{id:"macos",children:"macOS"}),"\n",(0,i.jsx)(t.p,{children:"The app will check for updates on startup without blocking the user, and on a schedule whilst the app runs. Once the user agrees, updates will be downloaded and applied in the background ready for the next launch."}),"\n",(0,i.jsx)(t.h3,{id:"linux",children:"Linux"}),"\n",(0,i.jsx)(t.p,{children:"An update check will be performed synchronously on each app start. If a new version is available then the update process will start and the update downloaded and applied, without any user interaction being required."}),"\n",(0,i.jsx)(t.h2,{id:"read-next",children:"Read next"}),"\n",(0,i.jsxs)(t.p,{children:["Check the ",(0,i.jsx)(t.a,{href:"/docs/guides/desktop",children:"Desktop Application"})," page."]})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},3023:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>l});var a=n(3696);const i={},s=a.createContext(i);function o(e){const t=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),a.createElement(s.Provider,{value:t},e.children)}}}]);